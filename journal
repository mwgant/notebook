#!/usr/bin/ruby -w
#
# $Id$
#
# = NAME
#   journal 
#
# = SYNOPSIS
#
#   A simple program that logs journal entries into a MySQL database.
#
# = USAGE
#
#   journal [ -h | --help ] [[ -s | --search ] <string> ] [<string>]
#
#   If no arguments are given then `vi' is launched for the user to enter text
#   for a new entry. A new entry can be added from the command line by placing
#   the text in double quotes.
#
#   -h | --help
#       Display this help.
#
#   -s | --search <string>
#       Search for <string> in journal. <string> is treated as a regular
#       expression.
#
# = AUTHOR
#
#   Mike Gant, mwgant@gmail.com
#

require 'optparse'
require 'rdoc/usage'
require 'mysql'

DEBUG       = false
REDTEXT     = "\033[31m"
GREENTEXT   = "\033[32m"
YELLOWTEXT  = "\033[33m"
BLUETEXT    = "\033[34m"
VIOLETTEXT  = "\033[35m"
CYANTEXT    = "\033[36m"
GREYTEXT    = "\033[37m"
NORMALTEXT  = "\033[0m"

HOST        = "localhost"
USER        = ENV['USER']
PASSWORD    = "b1gkzxuSCW8yw"
DB          = "journal"

begin

    # connect to the MySQL server
    dbh = Mysql.real_connect(HOST, USER, PASSWORD, DB)

    opts = OptionParser.new
    opts.on("-h", "--help", "show help") { RDoc::usage('NAME', 'SYNOPSIS', 'USAGE', 'AUTHOR') }
    # search for text using regular expression
    opts.on("-s STR", "--search STR", "Enter regular expression search term") do |str|
        # search for text using regular expression
        qstr = "SELECT * FROM entry WHERE text REGEXP \'#{str}\'"
        if DEBUG
            puts qstr
        end
        res = dbh.query("#{qstr}")

        res.each_hash do |row|
            printf GREENTEXT + "%s " + NORMALTEXT + "\n%s\n", 
                row['entrydate'], row['text']
        end
        res.free
        dbh.close if dbh
        exit
    end
    # Quoted strings get entered into the database
    opts.on(/.*/) do |str|
        qstr = "INSERT INTO entry (text) VALUES "
        str  = str + "\\n"
        qstr = qstr + "(\"#{str}\")"
        if DEBUG
            puts qstr
        end
        dbh.query("#{qstr}")
        dbh.close if dbh
        exit
    end
    # no arguments then open editor and to edit entry
    opts.on_tail do
        qstr = "LOAD DATA LOCAL INFILE "
        qstr2 = "INTO TABLE entry LINES TERMINATED BY \'\' (text)"
        tmpfile = `mktemp /tmp/journal.XXXXXX`
        tmpfile.chomp!
        system("vi \'+set tw=80\' #{tmpfile}")
        qstr = qstr + "\'#{tmpfile}\' " + qstr2
        if DEBUG
            puts qstr
        end
        dbh.query("#{qstr}")
        system("rm #{tmpfile}")
        dbh.close if dbh
        exit
    end
    opts.parse(ARGV) rescue RDoc::usage('usage')

rescue Mysql::Error => e
    puts "Error code: #{e.errno}"
    puts "Error message: #{e.error}"
    puts "Error SQLSTATE: #{e.sqlstate}" if e.respond_to?("sqlstate")
ensure
    # disconnect from server
    dbh.close if dbh
end

